version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"      # AMQP
      - "15672:15672"    # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: oktay
      RABBITMQ_DEFAULT_PASS: secret123
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ecommerce-net
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: oktay
      POSTGRES_PASSWORD: secret123
      POSTGRES_DB: ecommerce_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ecommerce-net
  inventory-service:
    build:
      context: ./inventory-service
    container_name: inventory-service
    ports:
      - "8090:8090"
    environment:
      - RABBITMQ_URL=amqp://oktay:secret123@rabbitmq:5672
      - RABBITMQ_DEFAULT_SERVICE=inventory_service_queue
      - RABBITMQ_ORDER_SERVICE=order_service_queue
      - RABBITMQ_NOTIFICATION_SERVICE=notification_service_queue
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=oktay
      - DB_PASS=secret123
      - DB_NAME=ecommerce_db
      - APP_PORT=8090
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
    networks:
      - ecommerce-net        
  notification-service:
    build:
      context: ./notification-service
    container_name: notification-service
    ports:
      - "8070:8070"
    environment:
      - RABBITMQ_URL=amqp://oktay:secret123@rabbitmq:5672
      - RABBITMQ_DEFAULT_SERVICE=notification_service_queue
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=oktay
      - DB_PASS=secret123
      - DB_NAME=ecommerce_db
      - APP_PORT=8070
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
      inventory-service:
        condition: service_started
    networks:
      - ecommerce-net
  order-service:
    build:
      context: ./order-service
    container_name: order-service
    ports:
      - "8080:8080"
    environment:
      - RABBITMQ_URL=amqp://oktay:secret123@rabbitmq:5672
      - RABBITMQ_DEFAULT_SERVICE=order_service_queue
      - RABBITMQ_INVENTORY_SERVICE=inventory_service_queue
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=oktay
      - DB_PASS=secret123
      - DB_NAME=ecommerce_db
      - APP_PORT=8080
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
      inventory-service:
        condition: service_started
      notification-service:
        condition: service_started  
    networks:
      - ecommerce-net

volumes:
  rabbitmq_data:
  postgres_data:

networks:
  ecommerce-net:
    driver: bridge
